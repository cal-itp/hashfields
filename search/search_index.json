{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"hashfields","text":"<p>Selectively hash, drop, or keep fields from a flat file (e.g. CSV).</p>"},{"location":"#example","title":"Example","text":"<pre><code>$ echo \"column1,column2,column3,column4\nr1c1,r1c2,r1c3,r1c4\nr2c1,r2c2,r2c3,r2c4\nr3c1,r3c2,r3c3,r3c4\nr4c1,r4c2,r4c3,r4c4\" | hashfields --alg sha256 --drop column1 column3 --skip column2\ncolumn2,column4\nr1c2,fb66e41761a74ea0c042e1c226c04fa2ce1a1334d7063d86230d17f33f109b68\nr2c2,6051c006caee661a6ccb390b8cf7a43230c5cd7b54861f7306a598b612f924b9\nr3c2,7e32c53b7729f5dce7ac54232b7f2d93d6c78ed19fc8d096b0fde948f513e9dc\nr4c2,f8d0624d128daf97c61ec28f4396e8f14be2ca2940d18fdf33e939cda9bd1824\n</code></pre>"},{"location":"#input-csv","title":"Input CSV","text":"<p>Given this input CSV:</p> <pre><code>column1,column2,column3,column4\nr1c1,r1c2,r1c3,r1c4\nr2c1,r2c2,r2c3,r2c4\nr3c1,r3c2,r3c3,r3c4\nr4c1,r4c2,r4c3,r4c4\n</code></pre> <p>as a table:</p> column1 column2 column3 column4 r1c1 r1c2 r1c3 r1c4 r2c1 r2c2 r2c3 r2c4 r3c1 r3c2 r3c3 r3c4 r4c1 r4c2 r4c3 r4c4"},{"location":"#configuration","title":"Configuration","text":"<p>These <code>hashfields</code> configuration options:</p> <ul> <li>Hash algorithm: <code>SHA256</code></li> <li>Drop: <code>column1</code>, <code>column3</code></li> <li>Skip: <code>column2</code></li> </ul>"},{"location":"#output-csv","title":"Output CSV","text":"<p><code>hashfields</code> produces this CSV:</p> <pre><code>column2,column4\nr1c2,fb66e41761a74ea0c042e1c226c04fa2ce1a1334d7063d86230d17f33f109b68\nr2c2,6051c006caee661a6ccb390b8cf7a43230c5cd7b54861f7306a598b612f924b9\nr3c2,7e32c53b7729f5dce7ac54232b7f2d93d6c78ed19fc8d096b0fde948f513e9dc\nr4c2,f8d0624d128daf97c61ec28f4396e8f14be2ca2940d18fdf33e939cda9bd1824\n</code></pre> <p>as a table:</p> column2 column4 r1c2 fb66e41761a74ea0c042e1c226c04fa2ce1a1334d7063d86230d17f33f109b68 r2c2 6051c006caee661a6ccb390b8cf7a43230c5cd7b54861f7306a598b612f924b9 r3c2 7e32c53b7729f5dce7ac54232b7f2d93d6c78ed19fc8d096b0fde948f513e9dc r4c2 f8d0624d128daf97c61ec28f4396e8f14be2ca2940d18fdf33e939cda9bd1824"},{"location":"development/","title":"Development getting started","text":"<ul> <li>Open in VS Code</li> <li>Rebuild and Reopen in Container</li> <li>Run <code>hashfields -h</code> in the devcontainer, review the usage notes</li> </ul>"},{"location":"development/#run-the-tests","title":"Run the tests","text":"<p>Use the Testing window in VS Code.</p>"},{"location":"development/#package-an-executable","title":"Package an executable","text":"<p>The app is packaged as a standalone, self-contained executable with <code>pyinstaller</code>.</p>"},{"location":"development/#docker","title":"Docker","text":"<p>Package a version of <code>hashfields</code> for a Linux-based Docker container:</p> <pre><code>docker compose build dist\n</code></pre> <p>Now run <code>dist</code> just like you would <code>hashfields</code>:</p> <pre><code>$ docker compose run dist -v\nhashfields &lt;version&gt;\n</code></pre>"},{"location":"development/#local","title":"Local","text":"<p>Or package the app for your current system:</p> <pre><code>pip install -e .[dist]\n\npyinstaller --onefile pyinstaller_entrypoint.py --name hashfields\n</code></pre> <p>The resulting executable is located at <code>./dist/hashfields</code>:</p> <pre><code>$ ./dist/hashfields -v\nhashfields &lt;version&gt;\n</code></pre>"},{"location":"development/#make-a-release","title":"Make a release","text":"<p>Releases run automatically with GitHub Actions.</p>"},{"location":"development/#push-a-tag","title":"Push a tag","text":"<p>The release process starts by pushing a calver version tag of the form <code>YYYY.0M.N</code> where:</p> <ul> <li><code>YYYY</code> is the 4 digit year</li> <li><code>0M</code> is the 0-prefixed month, e.g. 01 for January, 10 for October</li> <li><code>N</code> is the 1-based release number for the given month, incremented with   each release that year and month</li> </ul> <p>Pushing a new tag runs the <code>release.yml</code> workflow.</p> <p>A new GitHub Release is created automatically, with pre-build binaries for each platform attached as Release Assets. Edit the release notes as-needed.</p>"},{"location":"development/#publish-to-pypi","title":"Publish to PyPI","text":"<p>When a new release is published from the workflow above, the <code>pypi.yaml</code> runs to publish the new package to PyPI.</p>"},{"location":"usage/","title":"Usage","text":""},{"location":"usage/#get-the-executable","title":"Get the executable","text":"<p><code>hashfields</code> is a command-line executable program. Get the latest release for your platform:</p>"},{"location":"usage/#download-a-pre-built-binary","title":"Download a pre-built binary","text":"<p>From the Releases page</p>"},{"location":"usage/#install-from-source","title":"Install from source","text":"<p>Clone and install from the <code>main</code> branch:</p> <pre><code>git clone https://github.com/cal-itp/hashfields\n\ncd hashfields\n\npip install -e .\n</code></pre>"},{"location":"usage/#run-the-executable","title":"Run the executable","text":"<pre><code>$ hashfields --help\n\nusage: hashfields [-h] [-v] [-a {sha256,sha384,sha512}] [-t DELIMITER]\n                  [-d DROP [DROP ...]] [-s SKIP [SKIP ...]]\n                  [-i INPUT] [-o OUTPUT]\n\noptions:\n  -h, --help            show this help message and exit\n  -v, --version         show program's version number and exit\n  -a {sha256,sha384,sha512}, --alg {sha256,sha384,sha512}\n                        The hash algorithm to use.\n  -t DELIMITER, --delimiter DELIMITER\n                        Field delimiter in the input data.\n  -d DROP [DROP ...], --drop DROP [DROP ...]\n                        Column names to drop from the output.\n  -s SKIP [SKIP ...], --skip SKIP [SKIP ...]\n                        Column names to skip hashing in the output.\n  -i INPUT, --input INPUT\n                        Readable location for input data.\n  -o OUTPUT, --output OUTPUT\n                        Writable location for output results.\n</code></pre>"},{"location":"usage/#providing-input-to-hashfields","title":"Providing input to <code>hashfields</code>","text":""},{"location":"usage/#stdin","title":"<code>stdin</code>","text":"<p>By default <code>hashfields</code> reads from <code>stdin</code>. Pipe data in the Unix-style:</p> <pre><code>echo \"one,two,three\" | hashfields\n</code></pre>"},{"location":"usage/#file-input","title":"File input","text":"<p>Alternatively, <code>hashfields</code> can read from a file:</p> <pre><code>hashfields --input /path/to/file.csv\n</code></pre>"},{"location":"usage/#hashfields-output","title":"<code>hashfields</code> Output","text":""},{"location":"usage/#stdout","title":"<code>stdout</code>","text":"<p>By default <code>hashfields</code> writes to <code>stdout</code>:</p> <pre><code>$ echo \"one,two,three\" | hashfields\none,two,three\n</code></pre>"},{"location":"usage/#file-output","title":"File output","text":"<p>Alternatively, <code>hashfields</code> can write to a file:</p> <pre><code>hashfields --output /path/to/file.csv\n</code></pre>"}]}